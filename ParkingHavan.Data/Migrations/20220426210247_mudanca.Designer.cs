// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkingHavan.Data.Common;

namespace ParkingHavan.Data.Migrations
{
    [DbContext(typeof(ParkingContext))]
    [Migration("20220426210247_mudanca")]
    partial class mudanca
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ParkingHavan.Domain.Entities.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlacaCarro")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("ParkingHavan.Domain.Entities.Estacionamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ClienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("HorarioFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HorarioInicial")
                        .HasColumnType("datetime2");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorPagamento")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Estacionamento");
                });

            modelBuilder.Entity("ParkingHavan.Domain.Entities.PeriodoVigenciaTipoPeriodo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("TabelaPrecoPeriodoVigenciaId")
                        .HasColumnType("bigint");

                    b.Property<long>("TabelaPrecoTipoPeriodoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TabelaPrecoPeriodoVigenciaId");

                    b.HasIndex("TabelaPrecoTipoPeriodoId");

                    b.ToTable("PeriodoVigenciaTipoPeriodo");
                });

            modelBuilder.Entity("ParkingHavan.Domain.Entities.TabelaPrecoPeriodoVigencia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaPrecoPeriodoVigencia");
                });

            modelBuilder.Entity("ParkingHavan.Domain.Entities.TabelaPrecoTipoPeriodo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dia")
                        .HasColumnType("int");

                    b.Property<DateTime>("HorarioFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HorarioInicial")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaPrecoTipoPeriodo");
                });

            modelBuilder.Entity("ParkingHavan.Domain.Entities.TabelaPrecoValores", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Minuto")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("TabelaPrecoValores");
                });

            modelBuilder.Entity("ParkingHavan.Domain.Entities.Estacionamento", b =>
                {
                    b.HasOne("ParkingHavan.Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ParkingHavan.Domain.Entities.PeriodoVigenciaTipoPeriodo", b =>
                {
                    b.HasOne("ParkingHavan.Domain.Entities.TabelaPrecoPeriodoVigencia", "TabelaPrecoPeriodoVigencia")
                        .WithMany()
                        .HasForeignKey("TabelaPrecoPeriodoVigenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParkingHavan.Domain.Entities.TabelaPrecoTipoPeriodo", "TabelaPrecoTipoPeriodo")
                        .WithMany()
                        .HasForeignKey("TabelaPrecoTipoPeriodoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TabelaPrecoPeriodoVigencia");

                    b.Navigation("TabelaPrecoTipoPeriodo");
                });
#pragma warning restore 612, 618
        }
    }
}
